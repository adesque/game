{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.0","prelude":{"crate_id":{"name":"minimp3","disambiguator":[4963123894143144276,8070459993766405886]},"crate_root":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src","external_crates":[{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1307701420237324101,9952409239754731171]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3891028850780969662,11860656977252248702]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5748303080469865757,2496726973515729971]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[3075263514403435422,10845718462430689131]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[5329388063581846438,7620608119039677795]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10560054932714808400,15646703698321725095]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1684386597745790403,15726878300687201046]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[461077885925918245,3285404758122915049]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[10410579762577566083,16795925981071687463]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":10,"id":{"name":"minimp3_sys","disambiguator":[17568376342788284900,11865609702679052255]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":11,"id":{"name":"slice_deque","disambiguator":[5132939507202688900,186220906698748227]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":12,"id":{"name":"mach","disambiguator":[12921470925257417808,15263979993102721987]}},{"file_name":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[5152142081153656732,4707310786756053677]}}],"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":4227,"line_start":1,"line_end":141,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180,"byte_end":185,"line_start":10,"line_end":10,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":4227,"line_start":1,"line_end":141,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/amori/.cargo/registry/src/github.com-1ecc6299db9ec823/minimp3-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":45},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4444,"byte_end":4446,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" An error caused by some IO operation required during decoding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":49},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4558,"byte_end":4574,"line_start":11,"line_end":11,"column_start":5,"column_end":21},"name":"InsufficientData","qualname":"::error::Error::InsufficientData","value":"Error::InsufficientData","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The decoder tried to parse a frame from its internal buffer, but there was not enough.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":51},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4671,"byte_end":4682,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"SkippedData","qualname":"::error::Error::SkippedData","value":"Error::SkippedData","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The decoder encountered data which was not a frame (ie, ID3 data), and skipped it.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":53},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4752,"byte_end":4755,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Eof","qualname":"::error::Error::Eof","value":"Error::Eof","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The decoder has reached the end of the provided reader.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":68},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4361,"byte_end":4366,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Io, InsufficientData, SkippedData, Eof}","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53}],"decl_id":null,"docs":" Errors encountered by the MP3 decoder.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":252,"byte_end":273,"line_start":13,"line_end":13,"column_start":11,"column_end":32},"name":"MAX_SAMPLES_PER_FRAME","qualname":"::MAX_SAMPLES_PER_FRAME","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of samples present in a MP3 frame.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":559,"byte_end":566,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25}],"decl_id":null,"docs":" A MP3 decoder which consumes a reader and produces [`Frame`]s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1087,"byte_end":1092,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Frame","qualname":"::Frame","value":"Frame { data, sample_rate, channels, layer, bitrate }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37}],"decl_id":null,"docs":" A MP3 frame, owning the decoded audio of that frame.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":29},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1175,"byte_end":1179,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"data","qualname":"::Frame::data","value":"std::vec::Vec<i16>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The decoded audio held by this frame. Channels are interleaved.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":31},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1242,"byte_end":1253,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::Frame::sample_rate","value":"i32","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" This frame's sample rate in hertz.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1314,"byte_end":1322,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"name":"channels","qualname":"::Frame::channels","value":"usize","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The number of channels in this frame.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1377,"byte_end":1382,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"name":"layer","qualname":"::Frame::layer","value":"usize","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" MPEG layer used by this file.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":37},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1450,"byte_end":1457,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"bitrate","qualname":"::Frame::bitrate","value":"i32","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Current bitrate as of this frame, in kb/s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1573,"byte_end":1576,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (reader: R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder, consuming the `reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2063,"byte_end":2073,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"next_frame","qualname":"<Decoder<R>>::next_frame","value":"fn (&mut self) -> Result<Frame, Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new frame from the internal reader. Returns a [`Frame`] if one was found,\n or, otherwise, an `Err` explaining why not.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4785,"byte_end":4790,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4885,"byte_end":4890,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":5139,"byte_end":5144,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":984,"byte_end":991,"line_start":33,"line_end":33,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1475,"byte_end":1482,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4785,"byte_end":4790,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2562}},{"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":4885,"byte_end":4890,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":68},"to":{"krate":2,"index":7810}},{"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":5139,"byte_end":5144,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":68},"to":{"krate":1,"index":2338}},{"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":984,"byte_end":991,"line_start":33,"line_end":33,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":1638}},{"span":{"file_name":[47,85,115,101,114,115,47,97,109,111,114,105,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,109,112,51,45,48,46,51,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1475,"byte_end":1482,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}}]}